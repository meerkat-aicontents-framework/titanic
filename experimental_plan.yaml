name: none
## 외부에서 데이터 가져오기 / 결과 저장하는 경우 해당 위치에 지정
external_path:
    - load_train_data_path: ./solution/sample_data/train_data/
    - load_inference_data_path: ./solution/sample_data/inference_data/
    - save_train_artifacts_path:
    - save_inference_artifacts_path:
    - load_model_path: 

version: 1.0.0

external_path_permission:
    - aws_key_profile:
 
## 실험에 필요한 파라미터를 설정함 
## - 해당 위치에서 삭제되면, code 의 default 로 실행
user_parameters:
    - train_pipeline:
      - step: input 
        args: 
          - input_data_folder: train_data
            x_columns: ['Pclass', 'Sex', 'SibSp', 'Parch']
            y_column: Survived
      
      - step: train 
        args: 
          - n_estimators: 100
      
    - inference_pipeline:
      - step: input 
        args: 
          - input_data_folder: inference_data
            x_columns: ['Pclass', 'Sex', 'SibSp', 'Parch']
            y_column: 
      
      - step: inference
        args: 

      - step: output 
        args:


asset_source:
    - train_pipeline:
      - step: input
        source: 
          code: http://mod.lge.com/hub/dxadvtech/assets/alo-guide-input.git
          branch: release_1.0
          requirements:
            - pandas==1.5.3
      
      - step: train 
        source:
          code: http://mod.lge.com/hub/dxadvtech/assets/alo-guide-train.git
          branch: release_1.0
          requirements:
            - scikit-learn


    - inference_pipeline:
      - step: input
        source: 
          code: http://mod.lge.com/hub/dxadvtech/assets/alo-guide-input.git
          branch: release_1.0
          requirements:
            - pandas==1.5.3

      - step: inference 
        source: 
          code: http://mod.lge.com/hub/dxadvtech/assets/alo-guide-inference.git
          branch: release_1.0
          requirements: []

      - step: output 
        source: 
          code: http://mod.lge.com/hub/dxadvtech/assets/alo-guide-output.git
          branch: release_1.0
          requirements: []


control:
    ## 1. 패키지 설치 및 asset 존재 여부를 실험 시마다 체크할지, 한번만 할지 결정
    ## 1-2 requirements.txt 및 종속 패키지들 한번만 설치할 지 매번 설치할지도 결정 
    - get_asset_source: once ## once, every
    ## 2. 생성된 artifacts 를 backup 할지를 결정 True/False
    - backup_artifacts: True
    ## 3. pipeline 로그를 backup 할지를 결정 True/False
    - backup_log: True
    ## 4. 저장 공간 사이즈를 결정 (단위 MB)
    - backup_size: 1000
    ## 5. Asset 사이 데이터 전달 방법으로 memory, file 를 지원
    - interface_mode: memory
  
ui_args_detail:
